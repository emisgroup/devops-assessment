version: '3'

vars:
  PROJECT_DIR: "{{.ROOT_DIR}}"
  PROFILE_DIR: "{{.PROJECT_DIR}}"
  APPLICATION_DIR: "{{.PROJECT_DIR}}"
  ECR_REPO: "635395011038.dkr.ecr.us-east-1.amazonaws.com/ts/emis"
  PROFILE: "local"  # Change this to development/staging/production
  DOTENV_FILE: '{{.PROFILE_DIR}}/.env.{{.PROFILE}}'  # This will load .env.production by default
  BUILD_TAG:
    sh: echo YYYYmmddHHMM-hash | sed "s/YYYY/`date --date={{.BUILD_DATE}} -u +"%Y"`/g" | sed "s/mm/`date --date={{.BUILD_DATE}} -u +"%m"`/g" | sed "s/dd/`date --date={{.BUILD_DATE}} -u +"%d"`/g" | sed "s/HH/`date --date={{.BUILD_DATE}} -u +"%H"`/g" | sed "s/MM/`date --date={{.BUILD_DATE}} -u +"%M"`/g" | sed "s/ss/`date --date={{.BUILD_DATE}} -u +"%S"`/g" | sed "s/SS/`date --date={{.BUILD_DATE}} -u +"%S"`/g" | sed "s/hash/`git rev-parse --short HEAD`/g"
  IMAGE_NAME: 'emis-health-api'
  CONTAINER_NAME: 'emis-health-app-container'
tasks:

  default:
    cmds:
      - echo "Run 'task help' to see available tasks"

  build:
    desc: Build a docker image for node app API PROFILE is optional and defaults to local but can be set to dev/demo/prod e.g. task build PROFILE=dev
    dir: '{{.APPLICATION_DIR}}'
    requires:
      vars: [ 'APPLICATION_DIR', 'IMAGE_NAME', 'BUILD_TAG' ]
    cmds:
      - docker build  -t {{.ECR_REPO}}/emis-health/{{.IMAGE_NAME}}:{{.BUILD_TAG}} {{.APPLICATION_DIR}}

  run:
    desc: Run the Node Docker container PROFILE is optional and defaults to local but can be set to dev/demo/prod e.g. task run PROFILE=dev
    dotenv: ['{{.DOTENV_FILE}}'] 
    cmds:
      - echo "Running Docker container for {{.IMAGE_NAME}} with NODE_ENV={{.PROFILE}} and PORT=$PORT"
      - docker run --rm -e NODE_ENV={{.PROFILE}} -p $PORT:3000 --name {{.CONTAINER_NAME}} {{.ECR_REPO}}/emis-health/{{.IMAGE_NAME}}:{{.BUILD_TAG}}
  up:
    desc: Start the Docker container
    cmds:
      - docker compose up -d --build --force-recreate
  down:
    desc: Stop and remove the Docker container
    cmds:
      - docker compose down

  stop:
    desc: Stop and remove the Docker container
    cmds:
      - docker stop '{{.CONTAINER_NAME}}'
      - docker rm '{{.CONTAINER_NAME}}'

  restart:
    desc: Restart the Docker container
    cmds:
      - task: stop
      - task: run
  
   ecr-push:
    desc: Push the docker image to ECR
    cmds:
      - docker push {{.ECR_REPOSITORY}}}:{{.BUILD_TAG}}